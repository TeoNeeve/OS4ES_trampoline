/* 
   System with two basic tasks:
   Task1: producer
   Task2: consumer
   Task3: threshold manager
*/
    
OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {

    /* This fix the default STACKSIZE of tasks */
    TASK {
        UINT32 STACKSIZE = 32768 ;
    } ;

    /* This fix the default STACKSIZE of ISRs */
    ISR {
        UINT32 STACKSIZE = 32768 ;
    } ;
};

CPU three_tasks {
  OS config {
    STATUS = EXTENDED;
	TRACE = FALSE;
	BUILD = TRUE {
		APP_SRC = "prodcons.c";
		APP_SRC = "tpl_os_hooks.c";
		TRAMPOLINE_BASE_PATH = "/Users/massimoviolante/trampoline";
		CFLAGS="-ggdb";
		APP_NAME = "prodcons.exe";
		LINKER = "gcc";
		SYSTEM = PYTHON;
    };
  };
  
  APPMODE stdAppmode {};

MESSAGE from_producer {
    MESSAGEPROPERTY = SEND_STATIC_INTERNAL {
      CDATATYPE = "struct {int ts; int data;}";
    };
  };
  
  MESSAGE consumer_receive {
    MESSAGEPROPERTY = RECEIVE_QUEUED_INTERNAL {
      SENDINGMESSAGE = from_producer;
      QUEUESIZE = 15;
    };
    NOTIFICATION = ACTIVATETASK {
      TASK = Consumer;
    };
  };
  
  RESOURCE sem {
  	RESOURCEPROPERTY = STANDARD;
  };

  ALARM Ticker {
    COUNTER = SystemCounter;
    ACTION  = ALARMCALLBACK {
        ALARMCALLBACKNAME = "TickerCb";   /* function to call */
    };
    AUTOSTART = TRUE { APPMODE = stdAppmode; ALARMTIME = 1; CYCLETIME = 1; };
  };
  	
  ALARM one_sec_producer {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK { TASK = Producer; };
    AUTOSTART = TRUE { APPMODE = stdAppmode; ALARMTIME = 10; CYCLETIME = 100; };
  };
  
  ALARM stopper {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK { TASK = stop; };
    AUTOSTART = TRUE { APPMODE = stdAppmode; ALARMTIME = 2000; CYCLETIME = 0; };
  };

  TASK Producer {
    PRIORITY = 2;
    AUTOSTART = TRUE {APPMODE = stdAppmode;};
    ACTIVATION = 1;
    SCHEDULE = FULL;
    MESSAGE = from_producer;
    RESOURCE = sem;
  };

  TASK Consumer {
    PRIORITY = 1;
    AUTOSTART = FALSE;
    ACTIVATION = 4;
    SCHEDULE = FULL;
    MESSAGE = consumer_receive;
    RESOURCE = sem;
  };
  
  TASK stop {
    PRIORITY = 99;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };
  
};
